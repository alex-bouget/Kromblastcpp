name: Make artifact

on:
  push:
    tags:
      - "v*"

jobs:

  build-linux-20:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - run: pip install meson ninja

      - name: install dependency
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - run: meson setup builddir/
        env:
          CC: gcc

      - run: meson test -C builddir/ -v

      - run: DESTDIR=./dist meson install -C builddir/

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Linux_Meson_Testlog
          path: builddir/meson-logs/testlog.txt

      - uses: actions/upload-artifact@v2
        with:
          name: Linux_Kromblast_20
          path: builddir/dist/

  # macos:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       config:
  #         - os: macos-11
  #         - os: macos-12
  #         - os: macos-13
  #   runs-on: ${{ matrix.config.os }}
  #   steps:
  #   - uses: actions/checkout@v3

  #   - uses: actions/cache@v3
  #     with:
  #       path: ~/.macports-ci-ccache
  #       key: ccache-${{ runner.os }}-${{ matrix.configuration }}-${{ github.sha }}
  #       restore-keys: ccache-${{ runner.os }}-${{ matrix.configuration }}-
  #   - name: Install
  #     run: |
  #       source ./.github/flow/macports-ci Install

  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.x'

  #   - run: brew install gcc gtk+3

  #   - name: Install dependencies
  #     run: sudo port install webkit-gtk-2.0

  #   - run: pip install meson ninja

  #   - run: meson setup builddir/
  #     env:
  #       CC: gcc

  #   - run: meson test -C builddir/ -v

  #   - run: DESTDIR=./dist meson install -C builddir/

  #   - uses: actions/upload-artifact@v2
  #     if: failure()
  #     with:
  #       name: MacOS_Meson_Testlog
  #       path: builddir/meson-logs/testlog.txt

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: MacOs_Kromblast
  #       path: builddir/dist/

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.x'
  #   - run: pip install meson ninja
  #   - run: meson setup builddir/
  #     env:
  #       CC: gcc
  #   - run: meson test -C builddir/ -v
  #   - uses: actions/upload-artifact@v2
  #     if: failure()
  #     with:
  #       name: Windows_Meson_Testlog
  #       path: builddir/meson-logs/testlog.txt


  make-releases:
    runs-on: ubuntu-latest
    needs: [build-linux] #, macos, windows]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Download Linux artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: Linux_Kromblast
          path: ./dist/linux
          search_artifacts: true
          skip_unpack: true
      
      - name: Download Linux artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: Linux_Kromblast_20
          path: ./dist/linux
          search_artifacts: true
          skip_unpack: true
      
      # - name: Download MacOS artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     name: MacOs_Kromblast
      #     path: dist/macos
      #     search_artifacts: true
      #     skip_unpack: true

      # - name: Download Windows artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     name: Windows_Kromblast
      #     path: dist/windows
      #     search_artifacts: true

      - name: Overview tree
        run: tree

      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            dist/linux/Linux_Kromblast.zip
            dist/linux/Linux_Kromblast_20.zip
          # dist/macos/MacOs_Kromblast.zip
          # dist/windows/Windows_Kromblast.zip
