name: Release Kromblast

on:
  push:
    tags:
      - "v*"

jobs:
  make-meson:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Zip the source code
        run: zip -r kromblast.zip .
      
      - name: wrap meson
        run: |
          sed -i "s/_VERSION_/${{ github.ref_name }}/g" kromblast.wrap
          KROMBLAST_HASH=$(sha256sum kromblast.zip | cut -d ' ' -f 1)
          sed -i "s/_KROMBLAST_HASH_/$KROMBLAST_HASH/g" kromblast.wrap

      - uses: actions/upload-artifact@v4
        with:
          name: kromblast
          path: kromblast.zip
      
      - uses: actions/upload-artifact@v4
        with:
          name: kromblast.wrap
          path: kromblast.wrap


  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - run: pip install meson ninja

      - name: install git submodules
        run: git submodule update --init --recursive

      - name: install dependency
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - run: meson setup builddir/
        env:
          CC: gcc

      - run: meson test -C builddir/ -v

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Linux_Meson_Testlog
          path: builddir/meson-logs/testlog.txt

      - run: DESTDIR=./dist meson install -C builddir/

      - uses: actions/upload-artifact@v4
        with:
          name: Linux_Kromblast
          path: builddir/dist/

  build-linux-20:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - run: pip install meson ninja

      - name: install git submodules
        run: git submodule update --init --recursive

      - name: install dependency
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - run: meson setup builddir/
        env:
          CC: gcc

      - run: meson test -C builddir/ -v

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Linux_Meson_Testlog
          path: builddir/meson-logs/testlog.txt

      - run: DESTDIR=./dist meson install -C builddir/

      - uses: actions/upload-artifact@v4
        with:
          name: Linux_Kromblast_20
          path: builddir/dist/

  # macos:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       config:
  #         - os: macos-11
  #         - os: macos-12
  #         - os: macos-13
  #   runs-on: ${{ matrix.config.os }}
  #   steps:
  #   - uses: actions/checkout@v3

  #   - uses: actions/cache@v3
  #     with:
  #       path: ~/.macports-ci-ccache
  #       key: ccache-${{ runner.os }}-${{ matrix.configuration }}-${{ github.sha }}
  #       restore-keys: ccache-${{ runner.os }}-${{ matrix.configuration }}-
  #   - name: Install
  #     run: |
  #       source ./.github/flow/macports-ci Install

  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.x'

  #   - run: brew install gcc gtk+3

  #   - name: Install dependencies
  #     run: sudo port install webkit-gtk-2.0

  #   - run: pip install meson ninja

  #   - run: meson setup builddir/
  #     env:
  #       CC: gcc

  #   - run: meson test -C builddir/ -v

  #   - run: DESTDIR=./dist meson install -C builddir/

  #   - uses: actions/upload-artifact@v2
  #     if: failure()
  #     with:
  #       name: MacOS_Meson_Testlog
  #       path: builddir/meson-logs/testlog.txt

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: MacOs_Kromblast
  #       path: builddir/dist/

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.x'
  #   - run: pip install meson ninja
  #   - run: meson setup builddir/
  #     env:
  #       CC: gcc
  #   - run: meson test -C builddir/ -v
  #   - uses: actions/upload-artifact@v2
  #     if: failure()
  #     with:
  #       name: Windows_Meson_Testlog
  #       path: builddir/meson-logs/testlog.txt


  make-releases:
    runs-on: ubuntu-latest
    needs: [build-linux, build-linux-20, make-meson] #, macos, windows]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      # Can't use it because it's not possible to download artifacts from in-progress workflows
      # - name: Download artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: artifact.yml
      #     path: ./dist
      #     # search_artifacts: true
      #     skip_unpack: true

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: cd dist
        run: cd dist

      - name: compress artifact
        run: for i in $(find ./dist -type d); do cd "${i}" && zip -r "./../${i}.zip" "." && cd ..; done

      - name: Overview tree
        run: tree

      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            dist/Linux_Kromblast.zip
            dist/Linux_Kromblast_20.zip
            dist/kromblast.zip
            dist/kromblast.wrap
          # dist/macos/MacOs_Kromblast.zip
          # dist/windows/Windows_Kromblast.zip
